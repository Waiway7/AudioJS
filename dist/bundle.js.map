{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","document","addEventListener","pokeArray","wallpaper","body","style","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","opacity","canvas","getElementById","width","window","innerWidth","height","innerHeight","ctx","getContext","bars","f","h","innerPokeR","innerPokeB","switchWall","audio","createElement","src","audioCtx","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","gain","createGain","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","floatArray","play","animationLoop","clearRect","centerX","centerY","getByteFrequencyData","getByteTimeDomainData","rads","Math","PI","drawBar","x","y","xEnd","yEnd","barWidth","frequency","lineColor","rms","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","total","length","adjusted","square","sqrt","floor","random","barHeight","angle","cos","sin","outerX","outerY","outerXEnd","outerYEnd","innerX","innerY","innerXEnd","innerYEnd","pokeX","pokeY","pokeXEnd","pokeYEnd","innerPokeLineX","innerPokeLineY","innerPokeLineXEnd","innerPokeLineYEnd","outlineCapsuleX","outlineCapsuleY","outlineCapsuleXEnd","outlineCapsuleYEnd","fillInnerCapsuleX","fillInnerCapsuleY","fillInnerCapsuleXEnd","fillInnerCapsuleYEnd","fillBottomMiddleCapsuleX","fillBottomMiddleCapsuleY","fillBottomMiddleCapsuleXEnd","fillBottomMiddleCapsuleYEnd","fillUpperMiddleCapsuleX","fillUpperMiddleCapsuleY","fillUpperMiddleCapsuleXEnd","fillUpperMiddleCapsuleYEnd","requestAnimationFrame","currentTime","duration","load"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","document.addEventListener(\"DOMContentLoaded\", () => {\n    const pokeArray = \n    // ['./images/ditto.jpg']\n    ['./images/pokemon.png', './images/mudkip.jpg', './images/entei.jpg', './images/twins.jpg', './images/pan.png', './images/ditto.jpg']\n    let wallpaper;\n    // document.body.style.backgroundImage = `url('${pokeArray[wallpaper]}')`;\n    // document.body.style.backgroundColor = \"rgb(\" + 73 + \", \" + 63 + \", \" + 79 + \")\";\n    document.body.style.backgroundImage = `url('${pokeArray[0]}')`;\n    document.body.style.backgroundRepeat = \"no-repeat\";\n    document.body.style.backgroundPosition = \"center\";\n    document.body.style.backgroundSize = \"cover\";\n    document.body.style.opacity = 1\n    \n    // const dbArray = new Unit\n    \n\n    const canvas = document.getElementById(\"visualizer\");\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext(\"2d\");\n    \n    const bars = 200;\n\n    let f = 0\n    let h = 0\n    let a = 30;\n    let innerPokeR = 255;\n    let innerPokeB = 255;\n    let innerPokeG = 255;\n    let timeout = 5000\n    let dittoR = 231;\n    let dittoG =  139;\n    let dittoB = 231;\n    let switchWall = 0;\n\n\n    let audio = document.createElement(\"audio\");\n    audio.src=\"audio/Victory Road (Original Mix) 2.mp3\"\n    \n    // const fadeEffect = setInterval( () => {\n       \n    //     if (!document.body.style.opacity) {\n    //          document.body.style.opacity = 1;\n    //     }\n    //     if ( document.body.style.opacity > 0) {\n    //          document.body.style.opacity -= 0.1;\n    //     } else {\n    //         clearInterval(fadeEffect);\n    //     }\n    // }, 200);\n\n    // const fadeIn = setInterval( () => {\n    //     if (!wall.style.opacity)\n    // })\n    canvas.addEventListener(\"click\", () => {\n    \n    function animationLoop() {\n\n        \n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        const centerX = canvas.width / 2;\n        const centerY= canvas.height / 2;\n        const radius = 100;\n\n        analyser.getByteFrequencyData(dataArray)\n        analyser.getByteTimeDomainData(floatArray)\n       \n        const rads = (2) * Math.PI / bars\n        ctx.moveTo(0, 0);\n\n        function drawBar(x, y, xEnd, yEnd, barWidth, frequency){\n            // ctx.strokeStyle = lineColor;\n            // ctx.lineWidth = width;\n            // ctx.beginPath();\n            // // ctx.strokeRect(x1, y1, x2, y2)\n\n            // ctx.moveTo(x1, y1);\n            // ctx.lineTo(x2, y2);\n            // ctx.stroke()\n\n            let lineColor = \"rgb(\" + 255 + \", \" + frequency + \", \" + frequency + \")\";\n            if (wallpaper === 5){lineColor = \"rgb(\" + (frequency - 50 +231) + \", \" + (frequency + 50) + \", \" + (frequency + 100) + \")\";}\n            else if (wallpaper === 4){lineColor = \"rgb(\" + (frequency + 50) + \", \" + (frequency + 130) + \", \" + (frequency + 150) + \")\"}\n            else if (wallpaper === 3 && rms > 1.5){lineColor = \"rgb(\" + (frequency / 2) + \", \" + (frequency + 70) + \", \" + (frequency + 200) + \")\"}\n            else if (wallpaper === 1){lineColor = \"rgb(\" + (frequency + 40) + \", \" + (frequency + 130) + \", \" + (frequency + 160) + \")\"}\n            else if (wallpaper === 3){lineColor = \"rgb(\" + (255) + \", \" + (frequency + 50) + \", \" + (frequency + 50) + \")\"}\n            else if (wallpaper === 2 && rms < 1.4){lineColor = \"rgb(\" + (255) + \", \" + (frequency + 180) + \", \" + (frequency / 2 + 0) + \")\"}\n            // else {lineColor = \"rgb(\" + 255 + \", \" + frequency + \", \" + frequency + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = barWidth;\n            ctx.beginPath();\n            ctx.moveTo(x, y)\n            ctx.lineTo(xEnd, yEnd);\n            ctx.stroke()\n            ctx.closePath();\n        }\n        let total = 0;\n        for (let i = 0; i < floatArray.length; i++) {\n            const adjusted = (floatArray[i] * gain.gain.value);\n            const square = adjusted  ** 2\n            total += square;\n        }\n        let rms = total / floatArray.length\n        rms = Math.sqrt(rms) / (radius * gain.gain.value) \n        if (rms > 1.45) {\n            a = 100\n            innerPokeR = 255;\n            innerPokeB = 0;\n            innerPokeG = 0;\n            if ( switchWall === 0) {\n                wallpaper = Math.floor((Math.random() * pokeArray.length))\n                document.body.style.backgroundImage = `url('${pokeArray[wallpaper]}')`;\n            }\n            switchWall += 0.2;\n            if (switchWall > 10) {\n                switchWall = 0;\n            }\n        } \n        else {\n            f += 0.05\n            a = 30\n            innerPokeR = 255;\n            innerPokeB = 255;\n            innerPokeG = 255;\n        }\n\n        // ctx.beginPath();\n        // lineColor = \"rgb(\" + 255 + \", \" + 255 + \", \" + 255 + \")\";\n        // ctx.lineWidth = 8 + 2;\n        // ctx.moveTo()\n\n\n        for (let i = 0; i < bars; i++) {\n            \n            // let barHeight = (dataArray[i]) * gain.gain.value\n            // if (dataArray[i] > 170 && dataArray[i] < 180){\n            //     barHeight = dataArray[i] * gain.gain.value * 2\n            // }\n            \n            let frequency = dataArray[i] * 0.5\n\n            let barHeight;\n\n           if (i <= (bars * 0.25)) {\n                barHeight = (dataArray[i])  * gain.gain.value * 1.5\n           }\n           else if (i > (bars * 0.25) && i <= (bars * 0.5)) {\n                barHeight = (dataArray[i]) * gain.gain.value * 1.2\n           } \n           else if (i > (bars * 0.5) && i <= 150){\n                barHeight = (dataArray[i]) * gain.gain.value * 0.9\n        }    \n            else {\n                barHeight = (dataArray[i]) * gain.gain.value * 0.6\n           }\n\n        \n\n            let angle = rads * (i + h - f);\n            // const ang = rads * (i);\n            let x = centerX + (rms * Math.cos(angle) * (radius));\n            let y = centerY + (rms * Math.sin(angle) * (radius));\n            let xEnd = centerX + ( Math.cos(angle ) * (radius + barHeight) );\n            let yEnd = centerY + ( Math.sin(angle ) * (radius + barHeight) );\n            // let lineColor = \"rgb(\" + 80 + \", \" + frequency + \", \" + 200 + \")\";\n\n            const barWidth = 8;\n            drawBar(x, y, xEnd, yEnd, barWidth, frequency)\n\n            const outerX = centerX + (rms * Math.cos(angle) * (radius * 0.95));\n            const outerY = centerY + (rms * Math.sin(angle) * (radius * 0.95));\n\n            const outerXEnd = centerX + (rms * Math.cos(angle) * (radius));\n            const outerYEnd = centerY + (rms * Math.sin(angle) * (radius));\n            // ctx.strokeStyle = \"rgb(\" + 255 + \", \" + 100 + \", \" + 50 + \")\";\n            ctx.beginPath();\n            let lineColor = \"rgb(\" + 0 + \", \" + 0 + \", \" + 0 + \")\";\n            ctx.lineWidth = barWidth + 2;\n            ctx.strokeStyle = lineColor;\n            ctx.moveTo(outerX, outerY)\n            ctx.lineTo(outerXEnd, outerYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            // const innerX = centerX + (rms * Math.cos(angle) * (radius * 0.4));\n            // const innerY = centerY + (rms * Math.sin(angle) * (radius * 0.4));\n\n            // const innerXEnd = centerX + (rms * Math.cos(angle) * (radius * 0.35));\n            // const innerYEnd = centerY + (rms * Math.sin(angle) * (radius * 0.35));\n\n            const innerX = centerX + (rms * Math.cos(angle / 2) * (radius * 0.4));\n            const innerY = centerY + (rms * Math.sin(angle / 2) * (radius * 0.4));\n\n            const innerXEnd = centerX + (rms * Math.cos(angle / 2) * (radius * 0.95));\n            const innerYEnd = centerY + (rms * Math.sin(angle / 2) * (radius * 0.95));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 255 + \", \" + (255 - frequency * 0.1) + \", \" + (255 - frequency * 0.1) + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = barWidth + 2;\n            ctx.moveTo(innerX, innerY)\n            ctx.lineTo(innerXEnd, innerYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n\n            const pokeX = centerX + (rms * -Math.cos(angle / 2) * (radius * 0.4));\n            const pokeY = centerY + (rms * -Math.sin(angle / 2) * (radius * 0.4));\n\n            const pokeXEnd = centerX + (rms * -Math.cos(angle / 2) * (radius * 0.95));\n            const pokeYEnd = centerY + (rms * -Math.sin(angle / 2) * (radius * 0.95));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 255 + \", \" + (frequency * 0.5) + \", \" + (frequency * 0.5)  + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = barWidth + 2;\n            ctx.moveTo(pokeX, pokeY)\n            ctx.lineTo(pokeXEnd, pokeYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            const innerPokeLineX = centerX + (rms * Math.cos(angle) * (radius * 0.4));\n            const innerPokeLineY = centerY + (rms * Math.sin(angle) * (radius * 0.4));\n\n            const innerPokeLineXEnd = centerX + (rms * Math.cos(angle) * (radius * 0.37));\n            const innerPokeLineYEnd = centerY + (rms * Math.sin(angle) * (radius * 0.37));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 0 + \", \" + 0 + \", \" + 0 + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = barWidth + 2;\n            ctx.moveTo(innerPokeLineX, innerPokeLineY)\n            ctx.lineTo(innerPokeLineXEnd, innerPokeLineYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            const outlineCapsuleX = centerX + (rms * Math.cos(angle) * (radius * 0.2));\n            const outlineCapsuleY = centerY + (rms * Math.sin(angle) * (radius * 0.2));\n\n            const outlineCapsuleXEnd = centerX + (rms * Math.cos(angle) * (radius * 0.19));\n            const outlineCapsuleYEnd = centerY + (rms * Math.sin(angle) * (radius * 0.19));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 0 + \", \" + 0 + \", \" + 0 + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = 10;\n            ctx.moveTo(outlineCapsuleX, outlineCapsuleY)\n            ctx.lineTo(outlineCapsuleXEnd, outlineCapsuleYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            const fillInnerCapsuleX = centerX + (rms * Math.cos(angle) );\n            const fillInnerCapsuleY = centerY + (rms * Math.sin(angle) );\n\n            const fillInnerCapsuleXEnd = centerX + (rms * Math.cos(angle) * (radius * 0.195));\n            const fillInnerCapsuleYEnd = centerY + (rms * Math.sin(angle) * (radius * 0.195));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + innerPokeR + \", \" + (innerPokeB + 100) + \", \" + (innerPokeB + 100) + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = 10;\n            ctx.moveTo(fillInnerCapsuleX, fillInnerCapsuleY)\n            ctx.lineTo(fillInnerCapsuleXEnd, fillInnerCapsuleYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            const fillBottomMiddleCapsuleX = centerX + (rms * Math.cos(angle / 2) * (radius * 0.37) );\n            const fillBottomMiddleCapsuleY = centerY + (rms * Math.sin(angle / 2) * (radius * 0.37) );\n\n            const fillBottomMiddleCapsuleXEnd = centerX + (rms * Math.cos(angle / 2) * (radius * 0.21));\n            const fillBottomMiddleCapsuleYEnd = centerY + (rms * Math.sin(angle / 2) * (radius * 0.21));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 255 + \", \" + (255 - frequency * 0.1) + \", \" + (255 - frequency * 0.1) + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = 10;\n            ctx.moveTo(fillBottomMiddleCapsuleX, fillBottomMiddleCapsuleY)\n            ctx.lineTo(fillBottomMiddleCapsuleXEnd, fillBottomMiddleCapsuleYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            const fillUpperMiddleCapsuleX = centerX + -(rms * Math.cos(angle / 2) * (radius * 0.37) );\n            const fillUpperMiddleCapsuleY = centerY + -(rms * Math.sin(angle / 2) * (radius * 0.37) );\n\n            const fillUpperMiddleCapsuleXEnd = centerX + -(rms * Math.cos(angle / 2) * (radius * 0.21));\n            const fillUpperMiddleCapsuleYEnd = centerY + -(rms * Math.sin(angle / 2) * (radius * 0.21));\n\n            ctx.beginPath();\n            // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            lineColor = \"rgb(\" + 255 + \", \" + (255 - frequency * 0.1) + \", \" + (255 - frequency * 0.1) + \")\";\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = 10;\n            ctx.moveTo(fillUpperMiddleCapsuleX, fillUpperMiddleCapsuleY)\n            ctx.lineTo(fillUpperMiddleCapsuleXEnd, fillUpperMiddleCapsuleYEnd);\n            ctx.stroke();\n            ctx.closePath()\n\n            // ctx.beginPath();\n            // // lineColor = \"rgb(\" + 255 + \", \" + 100  + \", \" + a + \")\";\n            // lineColor = \"rgb(\" + 255 + \", \" + 255 + \", \" + 255 + \")\";\n            // ctx.strokeStyle = lineColor;\n            // ctx.lineWidth = barWidth + 2;\n            // ctx.moveTo(-innerX, -innerY)\n            // ctx.lineTo(-innerXEnd, innerYEnd);\n            // ctx.stroke();\n            // ctx.closePath()\n\n\n            \n           \n\n\n            // x = centerX + (rms * Math.cos(angle) * (radius - 50));\n            // y = centerY + (rms * Math.sin(angle) * (radius - 50));\n            // ctx.beginPath();\n            // ctx.strokeStyle = \"rgb(\" + 128 + \", \" + 128 + \", \" + 128 + \")\"\n            // ctx.moveTo(centerX, centerY)\n            // ctx.lineTo(x, y);\n            // ctx.stroke()  \n            \n            // drawBar(x, y, xEnd, yEnd, barWidth, lineColor)\n            // drawBar(canvas.width, canvas.height, xEnd, yEnd, barWidth, lineColor)\n\n    }\n        window.requestAnimationFrame(animationLoop);\n        if (audio.currentTime === audio.duration){\n            audio.load();\n        }\n    }    \n\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    const source = audioCtx.createMediaElementSource(audio);\n    const analyser = audioCtx.createAnalyser();\n    const gain = audioCtx.createGain();\n    source.connect(gain)\n    source.connect(analyser);\n    gain.gain.value = 0.7;\n    gain.connect(audioCtx.destination)\n    const fftSize = analyser.fftSize\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const floatArray = new Uint8Array(bufferLength)\n    \n    if (audio.src){\n        audio.play();\n        animationLoop();\n    } \n    // if (audio.currentTime === 0) {\n    //     debugger\n    //     audioCtx.close();\n    // }\n})})"],"sourceRoot":""}